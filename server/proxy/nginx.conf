worker_processes auto;

events {
    worker_connections 1024;
}

error_log /var/log/nginx/error.log warn;

http {
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;


    server {
        listen 80;
        listen [::]:80;
        
        # Replace with your actual domain name
        server_name your-domain.com www.your-domain.com;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # CORS Configuration for Frontend Communication
        # Allow requests from your Vercel frontend
        set $cors_origin "";
        if ($http_origin = "https://workhive-microservice.vercel.app") {
            set $cors_origin "https://workhive-microservice.vercel.app";
        }
        
        # Add CORS headers for all API routes
        location ~* ^/api/v2/ {
            # Handle preflight OPTIONS requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '$cors_origin' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept,Origin,X-Api-Key' always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            
            # Add CORS headers for actual requests
            add_header 'Access-Control-Allow-Origin' '$cors_origin' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept,Origin,X-Api-Key' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            # Common proxy settings for all services
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffer settings
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }
        
        # Auth Service Routes
        # Handles: /api/v2/auth/*
        location ~* ^/api/v2/auth(/|$) {
            proxy_pass https://workhive-auth-service.onrender.com;
        }
        
        # Application Service Routes  
        # Handles: /api/v2/applications/*
        location ~* ^/api/v2/applications(/|$) {
            proxy_pass https://workhive-application-service.onrender.com;
        }
        
        # Job Service Routes
        # Handles: /api/v2/jobs/*
        location ~* ^/api/v2/jobs(/|$) {
            proxy_pass https://workhive-job-service.onrender.com;
        }
        
        # Notification Service Routes
        # Handles: /api/v2/notifications/*
        location ~* ^/api/v2/notifications(/|$) {
            proxy_pass https://workhive-notification-service.onrender.com;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Default location for any other requests
        location / {
            return 404 "Not Found";
            add_header Content-Type text/plain;
        }
        
        # Logging
        access_log /var/log/nginx/workhive_access.log;
        error_log /var/log/nginx/workhive_error.log;
    }

# Optional: HTTPS configuration (uncomment and configure if you have SSL certificates)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name your-domain.com www.your-domain.com;
#     
#     # SSL Certificate paths (adjust according to your setup)
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     
#     # SSL Configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Include the same location blocks from the HTTP server above
#     # ... (copy all the location blocks from above)
# }

# HTTP to HTTPS redirect (uncomment if using HTTPS)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
}
