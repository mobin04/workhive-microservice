worker_processes 4;

events {
    worker_connections 1024;
}

http {
    # Add CORS map for handling preflight requests
    map $request_method $cors_method {
        OPTIONS 11;
        default 0;
    }

    server {
        listen 80;
        charset utf-8;

        # Add CORS headers for all responses
        add_header 'Access-Control-Allow-Origin' 'https://workhive-microservice.vercel.app' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Content-Type, X-Requested-With, Range, Origin' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;

        # Handle preflight OPTIONS requests
        if ($cors_method = 11) {
            add_header 'Access-Control-Allow-Origin' 'https://workhive-microservice.vercel.app' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Content-Type, X-Requested-With, Range, Origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Auth service proxy
        location ~ ^/api/v2/auth(/|$) {
            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' 'https://workhive-microservice.vercel.app' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Content-Type, X-Requested-With, Range, Origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            proxy_pass https://workhive-auth-service.onrender.com;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host workhive-auth-service.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Job service proxy
        location ~ ^/api/v2/jobs(/|$) {
            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' 'https://workhive-microservice.vercel.app' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Content-Type, X-Requested-With, Range, Origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            proxy_pass https://workhive-job-service.onrender.com;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host workhive-job-service.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Notification service proxy
        location ~ ^/api/v2/notifications(/|$) {
            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' 'https://workhive-microservice.vercel.app' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Content-Type, X-Requested-With, Range, Origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            proxy_pass https://workhive-notification-service.onrender.com;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host workhive-notification-service.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Application service proxy
        location ~ ^/api/v2/applications(/|$) {
            # Add CORS headers
            add_header 'Access-Control-Allow-Origin' 'https://workhive-microservice.vercel.app' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Accept, Authorization, Content-Type, X-Requested-With, Range, Origin' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            proxy_pass https://workhive-application-service.onrender.com;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host workhive-application-service.onrender.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}